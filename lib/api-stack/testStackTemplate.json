{
 "Resources": {
  "helloServiceRole353607D3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RenderTestService/ApiStack/hello/ServiceRole/Resource"
   }
  },
  "hello26396490": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "59205e8fa466be102c67392028566737ad8f38d28dcc05ce0204cc461da038a0.zip"
    },
    "Description": "Hello world api",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "helloServiceRole353607D3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "helloServiceRole353607D3"
   ],
   "Metadata": {
    "aws:cdk:path": "RenderTestService/ApiStack/hello/Resource",
    "aws:asset:path": "asset.59205e8fa466be102c67392028566737ad8f38d28dcc05ce0204cc461da038a0",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "helloApiC07BB54E": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Body": {
     "openapi": "3.1.0",
     "info": {
      "title": "RenderTest Service API",
      "version": "2023-12-12",
      "description": "Provides a friendly greeting from a AWS API Gateway deployed REST API"
     },
     "paths": {
      "/hello": {
       "get": {
        "operationId": "SayHi",
        "responses": {
         "200": {
          "description": "SayHi 200 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/SayHiResponseContent"
            },
            "examples": {
             "SayHi_example1": {
              "summary": "Say Hi Example",
              "description": "An example that says hello back",
              "value": {
               "greeting": "Hello from AWS API Gateway!"
              }
             }
            }
           }
          }
         },
         "429": {
          "description": "ThrottlingError 429 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/ThrottlingErrorResponseContent"
            }
           }
          }
         },
         "500": {
          "description": "ServiceError 500 response",
          "content": {
           "application/json": {
            "schema": {
             "$ref": "#/components/schemas/ServiceErrorResponseContent"
            }
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "type": "aws_proxy",
         "uri": {
          "Fn::Sub": "hello26396490.Arn"
         },
         "httpMethod": "POST"
        }
       }
      }
     },
     "components": {
      "schemas": {
       "SayHiResponseContent": {
        "type": "object",
        "properties": {
         "greeting": {
          "type": "string"
         }
        },
        "required": [
         "greeting"
        ]
       },
       "ServiceErrorResponseContent": {
        "type": "object",
        "properties": {
         "message": {
          "type": "string"
         }
        },
        "required": [
         "message"
        ]
       },
       "ThrottlingErrorResponseContent": {
        "type": "object",
        "properties": {
         "message": {
          "type": "string"
         }
        },
        "required": [
         "message"
        ]
       }
      }
     },
     "x-amazon-apigateway-request-validator": "full",
     "x-amazon-apigateway-request-validators": {
      "full": {
       "validateRequestParameters": true,
       "validateRequestBody": true
      }
     }
    },
    "Name": "helloApi"
   },
   "Metadata": {
    "aws:cdk:path": "RenderTestService/ApiStack/helloApi/Resource"
   }
  },
  "helloApiDeploymentBA401403f92d0ed762139a3dc4831e6510979caf": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "helloApiC07BB54E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RenderTestService/ApiStack/helloApi/Deployment/Resource"
   }
  },
  "helloApiDeploymentStageprod7750D22A": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "helloApiDeploymentBA401403f92d0ed762139a3dc4831e6510979caf"
    },
    "RestApiId": {
     "Ref": "helloApiC07BB54E"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "RenderTestService/ApiStack/helloApi/DeploymentStage.prod/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PS27DMAxEz5K9zNbpot0mKbpsAfcABiOzBv2RhJBqEBi+eyU5CLp6Q2I0HO2hrvfwvMOrVLYbq4nPsHwr2tGkVbtMOJ87bJ3vaBD4LPiIzip7ZxhnWBo/kTn9uMzVyEuLIqQCh4w0wzHakfSIQmZLg+R+ZGDgHpWueEt3A9mGRA+BS+JdJvp4sVQi3ilM/jaT02z5N6XSfSlSxLo+npnSJG/Z9dnwFTVEvV/YLEmfvOs4V1pN/i0M8vRbv0H9CvVuEObqEp3yTNBs/AOJcnQQOgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "RenderTestService/ApiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "helloApiEndpoint79747C48": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "helloApiC07BB54E"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "helloApiDeploymentStageprod7750D22A"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}